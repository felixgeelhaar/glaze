name: Release to NPM

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write
      issues: write
      repository-projects: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm -w build

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          # This will actually publish to npm when changesets are merged
          publish: pnpm changeset publish
          version: pnpm changeset version
          commit: 'chore: release packages'
          title: 'chore: release packages'
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release Summary
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "ðŸš€ Released packages to npm!"
          echo "========================"
          echo "The following packages were published:"
          echo "${{ steps.changesets.outputs.publishedPackages }}"
          
          # Parse and display package info
          echo "${{ steps.changesets.outputs.publishedPackages }}" | jq -r '.[] | "  - \(.name)@\(.version)"'

      - name: Send release notification
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "ðŸ“¦ Packages have been released to npm!"
          echo "View them at:"
          echo "${{ steps.changesets.outputs.publishedPackages }}" | jq -r '.[] | "  - https://www.npmjs.com/package/\(.name)"'

  # Optional: Also publish to GitHub Packages
  publish-gpr:
    name: Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@glaze'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm -w build

      - name: Configure npm for GitHub Packages
        run: |
          echo "@glaze:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc

      - name: Publish to GitHub Packages
        run: |
          echo "ðŸ“¦ Publishing to GitHub Packages..."
          
          # Get the latest versions from changesets
          for pkg in packages/*/package.json; do
            if [ -f "$pkg" ]; then
              PKG_DIR=$(dirname "$pkg")
              PKG_NAME=$(cat "$pkg" | jq -r '.name')
              PKG_VERSION=$(cat "$pkg" | jq -r '.version')
              PKG_PRIVATE=$(cat "$pkg" | jq -r '.private // false')
              
              if [ "$PKG_PRIVATE" != "true" ]; then
                echo "Publishing $PKG_NAME@$PKG_VERSION..."
                cd "$PKG_DIR"
                npm publish --registry=https://npm.pkg.github.com || echo "Already published or error"
                cd -
              fi
            fi
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}